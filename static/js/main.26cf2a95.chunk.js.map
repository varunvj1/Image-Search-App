{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","style","gridRowEnd","href","alt","image","description","src","urls","regular","ref","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"mRAGeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DC8BJC,E,4MAjCbC,MAAQ,CAAEC,KAAM,I,EAMhBC,aAAe,SAAAC,GAEbA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC3C,yBAAKA,UAAU,SACb,+CAEA,2BACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAxBvBK,IAAMC,WCqCfC,G,wDAnCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,GAAK,GAEtC,EAAKN,SAAS,CAAEU,WAdhB,EAAKvB,MAAQ,CAAEuB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YAJL,E,gEAUjBlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAUpD,OACE,yBAAKU,MAAO,CAAEC,WAAW,QAAD,OAAUrB,KAAKR,MAAMuB,SAC3C,uBAAGO,KAAK,KACN,yBACEC,IAAKvB,KAAKH,MAAM2B,MAAMC,YACtBC,IAAK1B,KAAKH,MAAM2B,MAAMG,KAAKC,QAC3BC,IAAK7B,KAAKY,SACVb,UAAU,qB,GA5BEQ,IAAMC,YCUfsB,G,MATG,SAAAjC,GAChB,IAAMkC,EAASlC,EAAMkC,OAAOC,KAAI,SAAAR,GAE9B,OAAO,kBAAC,EAAD,CAAWS,IAAKT,EAAMU,GAAIV,MAAOA,OAG1C,OAAO,yBAAKzB,UAAU,cAAf,IAA8BgC,EAA9B,OCkCMI,E,4MAtCb3C,MAAQ,CAAEuC,OAAQ,I,EAmBlBK,e,uCAAiB,WAAM3C,GAAN,eAAA4C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOhD,KAFJ,OACTiD,EADS,OAMf,EAAKrC,SAAS,CAAE0B,OAAQW,EAASC,KAAKC,UANvB,2C,6GAUf,OACE,yBAAK7C,UAAU,eAAeqB,MAAO,CAAEyB,UAAW,SAChD,kBAAC,EAAD,CAAW/C,SAAUE,KAAKoC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQ/B,KAAKR,MAAMuC,c,GAjCpBxB,IAAMC,WCAxBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.26cf2a95.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// .create creates an instane of axios and set its default properties\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization: \"Client-ID coflEIfMl-iUwR1Jzn50H7-Rf_G3wlX4iNTToz1G3J8\"\r\n  }\r\n});\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  // onInputChange(event) {\r\n  //     //event.target.value is the component that takes user input\r\n  //     console.log(event.target.value);\r\n  // }\r\n  onFormSubmit = event => {\r\n    //prevents the form to submit the input and refresh the page on pressing ENTER\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Search Image</label>\r\n            {/* <input type=\"text\" onChange={this.onInputChange} /> */}\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={e => {\r\n                this.setState({ term: e.target.value });\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./ImageCard.css\";\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { spans: 0 };\r\n    //Create a Ref to select the image (like querySelector in DOM in vanilla javascript)\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //add an event listener to the object using vanilla javascript. 'load' is emitted once\r\n    //the image is loaded successfully.\r\n    //After the image is loaded, a callback function is loaded\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n    const spans = Math.ceil(height / 10 + 1);\r\n    //spans:spans can be written as spans only (ES2015)\r\n    this.setState({ spans });\r\n  };\r\n  render() {\r\n    //   const {description , urls} = this.props.image;\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <a href=\"#\">\r\n          <img\r\n            alt={this.props.image.description}\r\n            src={this.props.image.urls.regular}\r\n            ref={this.imageRef}\r\n            className=\"imageBoxes\"\r\n          />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport \"./ImageList.css\";\r\n\r\nconst ImageList = props => {\r\n  const images = props.images.map(image => {\r\n    //parameter.urls.regular . Check this on Network > GET > Preview > results > urls.regular\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n  // console.log(props.images);\r\n  return <div className=\"image-list\"> {images} </div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component {\r\n  state = { images: [] };\r\n\r\n  //FIRST METHOD\r\n  // onSearchSubmit(term) {\r\n  //   axios\r\n  //     .get(\"https://api.unsplash.com/search/photos\", {\r\n  //       params: { query: term },\r\n  //       headers: {\r\n  //         Authorization: \"Client-ID coflEIfMl-iUwR1Jzn50H7-Rf_G3wlX4iNTToz1G3J8\"\r\n  //       }\r\n  //     })\r\n  //     .then(response => {\r\n  //       //shows a notification that the request was done\r\n  //       console.log(response.data.results);\r\n  //       //parameter.data.results and not just parameteras we require only the info in data.results\r\n  //     });\r\n  // }\r\n\r\n  //SECOND METHOD\r\n  onSearchSubmit = async term => {\r\n    const response = await unsplash.get(\"/search/photos\", {\r\n      params: { query: term }\r\n    });\r\n\r\n    //parameter.data.results and not just parameteras we require only the info in data.results\r\n    this.setState({ images: response.data.results });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"15px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from './components/App'\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"))"],"sourceRoot":""}